Bài hoặc đoạn này cần được wiki hóa theo các quy cách định dạng và văn phong Wikipedia. Xin hãy giúp phát triển bài này bằng cách liên kết trong đến các mục từ thích hợp khác. Bài viết này không được chú giải bất kỳ nguồn tham khảo nào. Mời bạn giúp hoàn thiện bài viết này bằng cách bổ sung chú thích cho từng nội dung cụ thể trong bài viết tới các nguồn đáng tin cậy. Các nội dung không có nguồn có thể bị nghi ngờ và xóa bỏ. Quy trình phát triển phần mềm Hoạt động chính Quy trình Yêu cầu Thiết kế Kỹ thuật Xây dựng Kiểm thử Gỡ lỗi Triển khai Bảo trì Hình mẫu và mô hình Tạo mẫu Thác nước Phòng sạch Gia tăng Xoắn ốc Mô hình V Agile Phương pháp và khung ASD DAD Nguyên mẫu RAD UP XP TSP PSP DSDM MSF Scrum Kanban Dual Vee Model TDD ATDD BDD FDD DDD MDD IID Lean DevOps Các quy tắc hỗ trợ Quản lý cấu hình Hạ tầng là Mã Tài liệu hóa Bảo đảm chất lượng phần mềm (SQA) Quản lý dự án Trải nghiệm người dùng WinOps Công cụ Trình biên dịch Trình gỡ lỗi Bộ đo đạc Xây dựng GUI Mô hình hóa IDE Build automation Tự động hóa phát hành Kiểm thử Tiêu chuẩn và BOK CMMI Tiêu chuẩn IEEE ISO 9001 ISO/IEC SWEBOK PMBOK BABOK x t s Quy trình phát triển phần mềm là một cấu trúc bao gồm tập hợp các thao tác và các kết quả tương quan sử dụng trong việc phát triển để sản xuất ra một sản phẩm phần mềm. Các thuật ngữ tương tự là vòng đời phần mềm và quy trình phần mềm. Đây được coi là một thành phần tập con của vòng đời phát triển hệ thống. Có một số mô hình cho việc xây dựng các quy trình này, mỗi mô hình mô tả các phương thức cũng như các nhiệm vụ hoặc thao tác cần được thực hiện trong cả quá trình. Nhiều người coi mô hình vòng đời là một thuật ngữ phạm vi rộng và quy trình phát triển phần mềm là một thuật ngữ ở mức chi tiết cụ thể hơn. Ví dụ, có rất nhiều quy trình phát triển phần mềm tuân theo mô hình vòng đời xoắn ốc. ISO/IEC 12207 là một tiêu chuẩn quốc tế cho các quy trình vòng đời phần mềm, mục đích là trở thành một tiêu chuẩn định nghĩa tất cả các công việc cần thực hiện để xây dựng và bảo trì sản phẩm phần mềm. Mục lục 1 Tổng quan 2 Các mô hình phát triển sản phẩm phần mềm 2.1 Mô hình thác nước 2.2 Mô hình phát triển tiến hoá 2.3 Mô hình xoắn ốc Boehm 2.4 Các quy trình linh hoạt 3 Tầm nhìn của các quy trình 4 Tham khảo Tổng quan Tiêu chuẩn quốc tế miêu tả các phương pháp cho việc lựa chọn, triển khai và giám sát vòng đời cho phần mềm là ISO/IEC 12207. Một quá trình kéo dài hàng thập kỷ với mục tiêu tìm ra được các quy trình có tính lặp lại và có thể dự đoán trước được để cải thiện hiệu suất lao động và chất lượng sản phẩm. Một số người đã cố gắng hệ thống hóa hoặc hình thức hóa các nhiệm vụ viết phần mềm vốn không tuân theo quy tắc nào cả. Một số khác áp dụng các kỹ thuật quản lý dự án để viết phần mềm. Nếu như không có quản lý dự án, thì các dự án phần mềm có thể sẽ dễ bị chuyển giao chậm hoặc vượt quá ngân sách. Với một số lượng lớn các dự án phần mềm không đáp ứng được kỳ vọng về chức năng, chi phí hoặc kế hoạch chuyển giao đã cho thấy một thực tế là do đang thiếu các phương thức quản lý dự án hiệu quả. Có 4 thao tác là nền tảng của hầu hết các quy trình phần mềm là: Đặc tả phần mềm: Các chức năng của phần mềm và điều kiện để nó hoạt động phải được định nghĩa. Sự phát triển phần mềm: Để phần mềm đạt được đặc tả thì phải có quy trình phát triển này. Đánh giá phần mềm: Phần mềm phải được đánh giá để chắc chắn rằng nó làm những gì mà khách hàng muốn. Sự tiến hóa của phần mềm: Phần mềm phải tiến hóa để thỏa mãn sự thay đổi các yêu cầu của khách hàng. Các mô hình phát triển sản phẩm phần mềm Mô hình thác nước Bài chi tiết: Mô hình thác nước Mô hình này làm cho ý nghĩa việc sản xuất phần mềm được thấy rõ hơn. Phân tích các yêu cầu và định nghĩa: hệ thống dịch vụ, khó khăn và mục tiêu được hình thành bởi sự trợ ý của hệ thống người tiêu dùng. Sau đó các yếu tố này được định nghĩa sao cho có thể hiểu được bởi cả người phát triển và người tiêu dùng. Thiết kế phần mềm và hệ thống: Thiết kế hệ thống các quy trình, các bộ phận và các yêu cầu về cả phần mềm lẫn phần cứng. Hoàn tất hầu như tất cả kiến trúc của các hệ thống này. Thiết kế phần mềm tham gia vào việc biểu thị các chức năng hệ thống phần mềm mà có thể được chuyển dạng thành một hay nhiều chương trình khả thi. Thực hiện và thử nghiệm các đơn vị: Trong giai đoạn này, thiết kế phần mềm phải được chứng thực như là một tập hợp nhiều chương trình hay nhiều đơn vị nhỏ. Thử nghiệm các đơn vị bao gồm xác minh rằng mỗi đơn vị thỏa mãn đặc tả của nó. Tổng hợp và thử nghiệm toàn bộ: Các đơn vị chương trình riêng lẻ hay các chương trình được tích hợp lại và thử nghiệm như là một hệ thống hoàn tất và chứng tỏ được các yêu cầu của phần mềm được thỏa mãn. Sau khi thử nghiệm phần mềm được cung ứng cho người tiêu dùng. Sản xuất và bảo trì: Thông thường (nhưng không bắt buộc) đây là pha lâu nhất của chu kỳ sống (của sản phẩm). Phần mềm được cài đặt và được dùng trong thực tế. Bảo trì bao gồm điều chỉnh các lỗi mà chưa được phát hiện trong các giai đọan trước của chu kì sống; nâng cấp sự thực hiện của hệ thống các đơn vị và nâng cao hệ thống dịch vụ cho là các phát hiện về yêu cầu mới. Chỗ yếu của mô hình này là nó không linh hoạt. Các bộ phận của đề án chia ra thành những phần riêng của các giai đoạn. Hệ thống phân phối đôi khi không dùng được vì không thỏa mãn được yêu cầu của khách hàng. Mặc dù vậy mô hình này phản ảnh thực tế công nghệ. Như là một hệ quả đây vẫn là mô hình cơ sở cho đa số các hệ thống phát triển phần mềm - phần cứng. Mô hình phát triển tiến hoá Phân loại sự phát triển tiến hóa Lập trình thăm dò: đối tượng của quy trình bằng cách làm việc với khách hàng để thăm dò các yêu cầu và phân phối phần mềm dứt điểm. Sự phát triển nên bắt đầu với những phần nào đã được hiểu rõ. Phần mềm sẽ được thêm vào các chức năng mới khi mà nó được đề nghị cho khách hàng (và nhận về các thông tin). Mẫu thăm dò: đối tượng của phát triển tiến hoá này là nhằm hiểu các yêu cầu của khách hàng và do đó phát triển các định nghĩa yêu cầu tốt hơn cho phần mềm. Các mẫu tập trung trên các thí nghiệm với những phần đòi hỏi nào của khách hàng mà có thể gây sự khó hiểu hay ngộ nhận. Phát triển phần mềm theo mô hình tiến hoá Phân tích mô hình: Mô hình phát triển tiến hóa này hiệu quả hơn mô hình thác nước. Tuy nhiên, nó vẫn còn các khuyết điểm: quy trình thì không nhìn thấy rõ được: Các nhà quản lý cần phân phối thường xuyên để đo lường sự tiến bộ. Nó không kinh tế trong việc làm ra các hồ sơ cho phần mềm. Phần mềm thường dược cấu trúc nghèo nàn: Sự thay đổi liên tục dễ làm đổ vỡ cấu trúc của phần mềm, tạo ra sự khó khăn và tốn phí. Thường đòi hỏi những kỹ năng đặc biệt: Hầu hết các hệ thống khả dĩ theo cách này được tiến hành bởi các nhóm nhỏ có kỹ năng cao cũng như các cá nhân phải năng động. Mô hình này thích hợp với: Phát triển các loại phần mềm tương đối nhỏ Phát triển các loại phần mềm có đời sống tương đối ngắn Tiến hành trong các hệ thống lớn hơn ở những chỗ mà không thể biểu thị được các đặc tả chi tiết trong lúc tiến hành. Thí dụ của trường hợp này là các hệ thống thông minh nhân tạo (AI) và các giao diện cho người dùng. Mô hình xoắn ốc Boehm Đây là mô hình phát triển từ mô hình thác nước cho thấy mức độ tổng quát hơn của các pha sản xuất của một sản phẩm. Mô hình được đề nghị bởi Boehm vào năm 1988. Mô hình này có thể chỉ ra các rủi ro có thể hình thành trên căn bản của mô hình quy trình (sản xuất) tổng quát. Mô hình Boehm có dạng xoắn ốc. Mỗi vòng lặp đại diện cho một pha của quy trình phần mềm. Vòng trong cùng tập trung về tính khả thi, vòng kế lo về định nghĩa các yêu cầu, kế đến là thiết kế,... Không có một pha nào được xem là cố định trong vòng xoắn. Mỗi vòng có 4 phần tương ứng với một pha. Cài đặt đối tượng: Chỉ ra các đối tượng của pha trong đề án. Những khó khăn hay cưỡng bức của quy trình và của sản phẩm được xác định và được lên kế hoạch chi tiết. Xác định các yếu tố rủi ro của đề án. Các phương án thay thế tùy theo các rủi ro này có thể được dự trù. Lượng định và giảm thiểu rủi ro. Tiến hành phân tích mỗi yếu tố rủi ro đã xác định. Các bước đặt ra để giảm thiểu rủi ro. Phát triển và đánh giá: Sau khi đánh giá các yếu tố rủi ro, một mô hình phát triển cho hệ thống được chọn. Lên kế hoạch: Đề án được xem xét và quyết định có nên hay không tiếp tục pha mới trong vòng lặp. Các quy trình linh hoạt Là quy trình mà trong đó cấu trúc khởi động sẽ nhỏ nhưng linh động và lớn dần của các đề án phần mềm nhằm tìm ra các khó khăn trước khi nó trở thành vấn đề có thể dẫn tới những hủy hoại. quy trình này nhấn mạnh sự gọn nhẹ và tập trung hơn là các phương pháp truyền thống. Các quy trình linh hoạt dùng các thông tin phản hồi thay vì dùng các kế hoạch, như là một cơ chế diều khiển chính. Các thông tin phản hồi có được từ các thử nghiệm và các phiên bản phát hành của phần mềm tham gia. Các quy trình linh hoạt thưòng có hiệu quả hơn các phương pháp cũ, nó dùng ít thời gian lập trình để sản xuất ra nhiều chức năng hơn, chất lượng cao hơn, nhưng nó không cung cấp một khả năng kế hoạch lâu dài. Một cách ngắn gọn các phương pháp này cung ứng hiệu quả cao nhất cho vốn đầu tư, nhưng lại không định rõ hiệu quả gì. Lập trình cực hạn, gọi tắt là XP, là loại quy trình linh hoạt được biết đến nhiều nhất. Trong XP, các pha được xúc tiến trong các bước cực nhỏ (hay liên tục) nếu so với các quy trình kiểu cũ, gọi là các "toán" xử lý. Bước đầu tiên (với chủ định là không hoàn tất) cho đến các bước có thể chỉ tốn một ngày hay một tuần, thay vì phải tốn nhiều tháng như trong phương pháp thác nước. Đầu tiên, một người viết các thử nghiệm tự động để cung cấp các mục tiêu cụ thể cho sự phát triển. Kế đến là giai đoạn viết mã (bởi một cặp lập trình viên); giai đoạn này hoàn tất khi mà các mã viết qua được tất cả các thử nghiệm và những người lập trình không tìm ra thêm được thử nghiệm cần thiết nào nữa. Thiết kế và kiến trúc được điều chỉnh và nâng cao ngay sau giai đoạn viết mã này bởi người đã viết mã trong giai đoạn trước. Hệ thống chưa hoàn tất nhưng hoạt động được này được khai thác hay được đem ra minh họa cho (một phần) người tiêu dùng mà trong số đó có người trong đội phát triển phần mềm. Thời điểm này những người thực nghiệm lại bắt đầu viết các thử nghiệm cho những phần quan trọng kế tiếp của hệ thống. Tầm nhìn của các quy trình Do bản chất không thể nắm bắt cụ thể của các hệ thống phần mềm, các nhà quản lý quy trình phần mềm cần các báo cáo, các hồ sơ và xem xét để theo dõi tiến độ cũng như những gì xảy ra của công việc. Hầu hết các tổ chức phát triển các phần mềm lớn dùng kiểu quy trình "định hướng chuyển giao được". Mỗi thao tác phải kết thúc bằng một hồ sơ hay báo cáo nhằm làm cho quy trình phần mềm trở nên cụ thể hơn. x t s Công nghệ phần mềm Các lĩnh vực Phân tích yêu cầu • Phân tích hệ thống • Thiết kế phần mềm • Lập trình máy tính • Các phương pháp hình thức • Kiểm thử phần mềm • Triển khai phần mềm • Bảo trì phần mềm Các khái niệm Mô hình hóa dữ liệu • Kiến trúc doanh nghiệp • Chi tiết hóa chức năng • Ngôn ngữ mô hình hóa • Mô hình lập trình • Phần mềm • Kiến trúc phần mềm • Phương pháp học phát triển phần mềm • Quy trình phát triển phần mềm • Chất lượng phần mềm • Bảo đảm chất lượng phần mềm • Khảo cổ học phần mềm • Phân tích có cấu trúc Các định hướng Định hướng khía cạnh • Định hướng đối tượng • Ontology • Định hướng dịch vụ • Vòng đời phát triển hệ thống Các mô hình Các mô hình phát triển Linh hoạt • Mô hình lặp • RUP • Scrum • Mô hình xoắn ốc • Mô hình thác nước • XP • V-Model • Mô hình tăng tiến • Mô hình nguyên mẫu Các mô hình khác Automotive SPICE • CMMI • Mô hình dữ liệu • Mô hình hàm • Mô hình thông tin • Mô hình hóa meta • Mô hình đối tượng • Mô hình hệ thống • Mô hình quan sát Các ngôn ngữ mô hình hóa IDEF • UML Các kỹ sư phần mềm Kent Beck • Grady Booch • Fred Brooks • Barry Boehm • Ward Cunningham • Ole-Johan Dahl • Tom DeMarco • Martin Fowler • C. A. R. Hoare • Watts Humphrey • Michael A. Jackson • Ivar Jacobson • Craig Larman • James Martin • Bertrand Meyer • David Parnas • Winston W. Royce • Colette Rolland • James Rumbaugh • Niklaus Wirth • Edward Yourdon • Victor Basili Các lĩnh vực liên quan Khoa học máy tính • Kỹ nghệ máy tính • Kỹ nghệ doanh nghiệp • Lịch sử • Quản lý • Toán học • Quản lý dự án • Quản lý chất lượng • Công thái học phần mềm • Kỹ nghệ hệ thống x t s Những lĩnh vực chính của khoa học máy tính Các nền tảng toán học Logic toán học · Lý thuyết tập hợp · Lý thuyết số · Lý thuyết đồ thị · Lý thuyết kiểu · Lý thuyết thể loại · Giải tích số · Lý thuyết thông tin · Đại số · Nhận dạng mẫu · Nhận dạng tiếng nói · Toán học tổ hợp · Đại số Boole · Toán rời rạc Lý thuyết phép tính Độ phức tạp Kolmogorov · Lý thuyết Automat · Lý thuyết tính được · Lý thuyết độ phức tạp tính toán · Lý thuyết điện toán lượng tử Các cấu trúc dữ liệu và các giải thuật Phân tích giải thuật · Thiết kế giải thuật · Hình học tính toán · Tối ưu hóa tổ hợp Các ngôn ngữ lập trình và Các trình biên dịch Các bộ phân tích cú pháp · Các trình thông dịch · Lập trình cấu trúc · Lập trình thủ tục · Lập trình hướng đối tượng · Lập trình hướng khía cạnh · Lập trình hàm · Lập trình logic · Lập trình máy tính · Lập trình mệnh lệnh · Lập trình song song · Lập trình tương tranh · Các mô hình lập trình · Prolog · Tối ưu hóa trình biên dịch Tính song hành, Song song, và các hệ thống phân tán Đa xử lý · Điện toán lưới · Kiểm soát song hành · Hiệu năng hệ thống · Tính toán phân tán Công nghệ phần mềm Phân tích yêu cầu · Thiết kế phần mềm · Các phương pháp hình thức · Kiểm thử phần mềm · Quy trình phát triển phần mềm · Các phép đo phần mềm · Đặc tả chương trình · LISP · Mẫu thiết kế · Tối ưu hóa phần mềm Kiến trúc hệ thống Kiến trúc máy tính · Tổ chức máy tính · Các hệ điều hành · Các cấu trúc điều khiển · Cấu trúc bộ nhớ lưu trữ · Vi mạch · Thiết kế ASIC · Vi lập trình · Vào/ra dữ liệu · VLSI design · Xử lý tín hiệu số Viễn thông và Mạng máy tính Audio máy tính · Chọn tuyến · Cấu trúc liên kết mạng · Mật mã học Các cơ sở dữ liệu và Các hệ thống thông tin Hệ quản trị cơ sở dữ liệu · Cơ sở dữ liệu quan hệ · SQL · Các giao dịch · Các chỉ số cơ sở dữ liệu · Khai phá dữ liệu · Biểu diễn và giao diện thông tin · Các hệ thống thông tin · Khôi phục dữ liệu · Lưu trữ thông tin · Lý thuyết thông tin · Mã hóa dữ liệu · Nén dữ liệu · Thu thập thông tin Trí tuệ nhân tạo Lập luận tự động · Ngôn ngữ học tính toán · Thị giác máy tính · Tính toán tiến hóa · Các hệ chuyên gia · Học máy · Xử lý ngôn ngữ tự nhiên · Robot học Đồ họa máy tính Trực quan hóa · Hoạt họa máy tính · Xử lý ảnh Giao diện người-máy tính Khả năng truy cập máy tính · Giao diện người dùng · Điện toán mang được · Điện toán khắp mọi nơi · Thực tế ảo Khoa học tính toán Cuộc sống nhân tạo · Tin sinh học · Khoa học nhận thức · Hóa học tính toán · Khoa học thần kinh tính toán · Vật Lý học tính toán · Các giải thuật số · Toán học kí hiệu Chú ý: khoa học máy tính còn có thể được chia thành nhiều chủ đề hay nhiều lĩnh vực khác dựa theo Hệ thống xếp loại điện toán ACM. x t s Chuyên ngành chính của Tin học • Phần cứng • Phần mềm Công nghệ thông tin Cuộc sống nhân tạo Đa xử lý Điện toán lưới Đồ họa máy tính Hệ chuyên gia Hệ thống thông tin quản lý Hoạt họa máy tính Khoa học nhận thức Khoa học tính toán Khoa học thần kinh tính toán Khoa học thông tin Kiểm soát song hành Kiến trúc hệ thống Lập luận tự động Ngôn ngữ hình thức Ngôn ngữ học tính toán Người máy Robot học Thực tế ảo Tính toán song song Tối ưu hóa trình biên dịch Tổ chức máy tính Trí tuệ nhân tạo Từ điển học Tương tranh Vật lý học tính toán Hệ thống thông tin An toàn thông tin Cơ sở dữ liệu đa phương tiện Cơ sở dữ liệu thông minh Dữ liệu lớn Hệ cơ sở tri thức Hệ dựa trên logic Hệ gợi ý Hệ thích nghi dựa trên ngữ cảnh Hệ thống hướng tác tử Hệ thống thông minh Hệ thống thông tin địa lý Hệ trợ giúp quyết định Kỹ nghệ dữ liệu Kỹ nghệ tri thức Logic mờ Phân tích dữ liệu Phân tích và thiết kế hệ thống Quản trị dự án Quản trị tri thức Thiết kế và quản trị dữ liệu Tích hợp dữ liệu Tính toán hiệu năng cao Web ngữ nghĩa Xử lý thông tin mờ Khoa học máy tính Cơ sở dữ liệu phân tán Hệ quản trị cơ sở dữ liệu Hệ thống đa lõi Hệ thống truyền thông Hình học tính toán Hóa học tính toán Học máy Khai phá dữ liệu Lập trình song song Lý thuyết mã hóa Lý thuyết tính toán Ngôn ngữ và phương pháp dịch Nguyên lý ngôn ngữ lập trình Quy hoạch ràng buộc Sinh học tính toán (Tin sinh học) Thiết kế và phân tích thuật toán Tìm kiếm thông tin Tính toán khoa học Tính toán kí hiệu Tính toán phân tán Tính toán tiến hóa Tính toán tự nhiên Tối ưu hoá tổ hợp Xử lý song song Kỹ thuật máy tính Đa phương tiện Định vị vệ tinh (GNSS) Giao diện người dùng Ghép nối máy tính Hệ nhúng Hệ thống thời gian thực Hiệu năng hệ thống Kiến trúc máy tính Lập trình đôi Lập trình đồ họa Lập trình hệ thống Lý thuyết nhận dạng Mạng nơ-ron Nhận dạng tiếng nói Phân tích tín hiệu Thị giác máy tính Thiết kế IC Thoại IP Tổng hợp giọng nói Tương tác người–máy tính Vi xử lý Xử lý ảnh Xử lý dữ liệu đa phương tiện Xử lý ngôn ngữ tự nhiên Xử lý tiếng nói Xử lý tín hiệu số Kỹ nghệ phần mềm Bảo trì phần mềm Các phương pháp hình thức Chất lượng phần mềm Đảm bảo chất lượng phần mềm Đánh giá phần mềm Đo lường và quản trị phần mềm Độ tin cậy và chịu lỗi phần mềm Kiểm thử phần mềm Kiến trúc doanh nghiệp Kiến trúc phần mềm Kinh tế công nghệ phần mềm Kỹ nghệ hướng dịch vụ Lập trình linh hoạt Mẫu thiết kế Mô hình hóa phần mềm Phân tích hệ thống Phân tích thiết kế hướng đối tượng (UML) Phân tích yêu cầu phần mềm Phát triển phần mềm Quản lý cấu hình phần mềm Quản lý dự án phần mềm Quản lý kỹ thuật phần mềm Quy trình phát triển phần mềm (Vòng đời phát hành phần mềm) Thiết kế phần mềm Triển khai phần mềm Tối ưu hóa phần mềm Mạng máy tính An ninh mạng An ninh trong giao dịch điện tử Đánh giá hiệu năng mạng (QoS) Điện toán đám mây Định tuyến Hệ phân tán Kỹ thuật truyền thông Lý thuyết thông tin Mạng không dây Mạng thế hệ mới Mạng thiết bị di động Mạng thông tin quang Mật mã học Mô phỏng mạng Nhận dạng Quản trị mạng Thiết bị truyền thông và mạng Thiết kế mạng Tính toán khắp nơi và di động Trung tâm dữ liệu Truyền thông di động Truyền thông đa phương tiện Truyền thông số Vệ tinh thông tin Viễn thông (Mạng viễn thông) Ước lượng tín hiệu và hệ thống Web thế hệ mới Tin học kinh tế x t s Giám đốc công nghệ thông tin · Tin học kinh tế · Quản lý công nghệ thông tin Quản lý ITIL & ITSM Định hướng phát triển Phát triển nhân lực Quản lý bảo mật Quản lý chất lượng Quản lý công nghệ Quản lý dự án Quản lý mua sắm Quản lý ngân sách Quản lý nguồn lực Quản lý phát hành Quản lý rủi ro Quản lý tài sản Quản lý thay đổi Quản lý tích hợp Quản lý tổ chức Quản lý truyền thông Quản lý tuân thủ Quản lý vấn đề Thiết kế giải pháp Xây dựng chiến lược Xây dựng chính sách Quản lý mạng Ảo hóa Mạng campus Mạng diện rộng Mạng nội bộ Mạng riêng ảo STP VLAN IVR VTP Quản trị hệ thống Hoạt động vận hành Bảo trì thiết bị Bảo vệ hệ thống Đối phó sự cố Kế hoạch dự phòng Hoạt động kỹ thuật Hỗ trợ kỹ thuật Kiểm soát truy cập Kiểm tra hệ thống Xác thực người dùng Hoạt động an toàn An ninh nhân sự An ninh hệ thống Nhận thức an toàn Rủi ro hệ thống Quản lý hệ thống Bàn dịch vụ Quản lý cấu hình Quản lý công suất Quản lý dịch vụ Quản lý hạ tầng Quản lý khôi phục Quản lý người dùng Quản lý sự cố Quản lý tính liên tục Quản lý tính sẵn sàng Tổ chức công việc Tổ chức hỗ trợ Kỹ năng lãnh đạo Kỹ năng cộng tác nhóm Kỹ năng đàm phán Kỹ năng giải quyết vấn đề Kỹ năng giao tiếp Kỹ năng gọi thoại Kỹ năng huấn luyện Kỹ năng lắng nghe Kỹ năng phân công ủy thác Kỹ năng phỏng vấn tuyển dụng Kỹ năng quản lý thời gian Kỹ năng tạo động lực Kỹ năng tư duy Kỹ năng thiết kế quy trình Kỹ năng thuyết trình Kỹ năng viết tài liệu kỹ thuật Ứng dụng Chính phủ điện tử Giáo dục trực tuyến Hoạch định tài nguyên doanh nghiệp Kinh doanh điện tử (Mua sắm trực tuyến · Thương mại điện tử · Tiếp thị trực tuyến) Kinh doanh thông minh Quản lý quan hệ khách hàng Quản lý tri thức Các lĩnh vực liên quan Kinh tế Luật pháp Tài chính Kế toán Kinh doanh Tổ chức Xã hội Quản lý Quản trị kinh doanh Tham khảo Bài viết này vẫn còn sơ khai. Bạn có thể giúp Wikipedia bằng cách mở rộng nội dung để bài được hoàn chỉnh hơn. x t s