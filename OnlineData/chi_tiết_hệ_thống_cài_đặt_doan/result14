ĐẠI HỌC QUỐC GIA HÀ NỘI TRƯỜNG ĐẠI HỌC CÔNG NGHỆ Bùi Thị Tiếp XÂY DỰNG HỆ THỐNG ĐẶT VÉ XE KHÁCH CHẤT LƯỢNG CAO KHOÁ LUẬN TỐT NGHIỆP ĐẠI HỌC HỆ CHÍNH QUY Ngành: Công Nghệ Thông Tin HÀ NỘI – 2009 ĐẠI HỌC QUỐC GIA HÀ NỘI TRƯỜNG ĐẠI HỌC CÔNG NGHỆ Bùi Thị Tiếp XÂY DỰNG HỆ THỐNG ĐẶT VÉ XE KHÁCH CHẤT LƯỢNG CAO KHOÁ LUẬN TỐT NGHIỆP ĐẠI HỌC HỆ CHÍNH QUY Ngành: Công Nghệ Thông Tin Cán bộ hướng dẫn: ThS. Tô Văn Khánh HÀ NỘI – 2009 LỜI CẢM ƠN Trong quá trình nghiên cứu và hoàn thành khóa luận tôi đã nhân được nhiều sự giúp đỡ ân cần của gia đình, quý thầy cô và bạn bè. Tôi xin được bày tỏ lòng cảm ơn chân thành tới quý thầy cô giáo trong trường Đại học Công Nghệ - Đại học Quốc Gia Hà Nội. Đặc biệt là thầy cô trong Bộ môn Công nghệ Phần mềm, đã dạy dỗ dìu dắt tôi trong quá trình học tập cũng như quá trình hoàn thành khóa luận. Tôi xin được gửi lời cảm ơn sâu sắc tới thầy giáo thạc sỹ Tô Văn Khánh – người trực tiếp hướng dẫn tôi làm khóa luận. Thầy đã tận tình hướng dẫn và giúp tôi sửa chữa những sai sót trong quá trình thực hiện đề tài. Cuối cùng, tôi xin bày tỏ lòng biết ơn chân thành tới gia đình và bạn bè tôi. Những người đã luôn động viên giúp đỡ tôi trong quá trình học tập cũng như trong cuộc sống. Và tôi xin gửi lời cám ơn sâu sắc tới anh – một Người đặc biệt luôn dõi theo tôi từng bước trong học tập cũng như cuộc sống hàng ngày. Và sự động viên kịp thời của anh giúp tôi có thêm nghị lực để hoàn thành khóa luận này. Đề tài “Xây dựng hệ thống đặt vé xe khách chất lượng cao” được hoàn thành trong thời gian ngắn nên không tránh được những sai sót khiếm khuyết. Tôi rất mong nhận được ý kiến đóng góp của quý thầy cô và bạn bè để hệ thống ngày càng hoàn thiện hơn. Xin chân thành cảm ơn! Hà Nội, ngày 15 tháng 05 năm 2009 Bùi Thi tiếp TÓM TẮT NỘI DUNG KHÓA LUẬN Khóa luận trình bày về quy trình nghiệm vụ của quá trình đặt vé xe khách qua mạng. Đồng thời sẽ trình bày về ngôn ngữ mô hình hóa UML – công cụ phân tích thiết kế hệ thống hướng đối tượng. Trên cơ sở đó sẽ phân tích thiết kế hệ thống đặt vé xe khách chất lượng cao. Hệ thống hoàn thành sẽ giúp cho việc mua bán vé xe thuận lợi hơn cũng như trợ giúp công ty vận tải quản lý các hoạt động hiệu quả hơn. Hệ thống có các chức năng sau: Quản lý khách hàng, quản lý danh mục, quản lý người dùng và quản trị hệ thống. Khóa luận gồm các phần sau : Tổng quan về UML: Giới thiệu tổng quan về UML và những cải tiến của UML 2.0. Mô tả bài toán nghiệp vụ: Mô tả hoạt động chính của quy trình đặt mua vé qua mạng. Nắm bắt yêu cầu hệ thống: Xác định các chức năng chính của hệ thống, các nhóm người sử dụng, các yêu cầu về hệ thống. Phân tích thiết kế hệ thống: Phân tích hệ thống theo hướng đối tượng, phân rã các chức năng hệ thống. Cài đặt thử nghiệm hệ thống: Cài đặt một số chức năng của hệ thống. Kết luận và hướng phát triển: Chỉ ra những kết quả thu được, những hạn chế và hướng phát triển hệ thống. MỤC LỤC CÁC KÍ HIỆU VIẾT TẮT TRONG KHÓA LUẬN Từ tiếng anh UML Unified Modeling Language Từ tiếng việt CNTT Công Nghệ Thông Tin CSDL Cơ Sở Dữ Liệu NSD Người Sử Dụng NV Nhân Viên QL Quản Lý CHƯƠNG 1 MỞ ĐẦU Cơ sở lựa chọn đề tài Kinh tế xã hội ngày càng phát triển, hội nhập kinh tế quốc tế ngày càng mạnh, sự chuyển dịch cơ cấu kinh tế giữa các vùng miền ngày càng cao. Cơ cấu lao động cũng có sự dịch chuyển mạnh mẽ. Từ đó kéo theo sự di chuyển chỗ ở, chỗ làm việc của rất nhiều người. Mọi người có nhu cầu đi lại ngày càng nhiều. Mặt khác, do kinh tế phát triển nên nhu cầu đi thăm quan, thăm viếng người nhà ở xa tăng. Trên thực tế nhu cầu đi lại của người dân tăng đột biến. Và với cách mua và bán vé xe truyền thống đã không đáp ứng được nhu cầu bức xúc đó. Thường diễn ra cảnh chen lấn xô đẩy để mua vé. Từ thực tế đó đã gây cho người dân rất nhiều bức xúc như chờ vài tiếng mà không mua được vé, đến lượt mua vé thì được thông báo hết vé. Còn đối với các công ty vận tải thì cũng gặp khó khăn trong việc tổ chức bán vé xe. Cảnh chen lấn xô đẩy đó đã tạo điều kiện cho bọn móc túi, cướp giật, bán vé chợ đen hoạt động. Càng làm cho tình hình thêm tồi tệ, người dân và doanh nghiệp càng thêm bức xúc. Từ những bức xúc đó, nên tôi đã quyết định chọn đề tài khóa luận tốt nghiệp là xây dựng hệ thống website đặt vé xe khách chất lượng cao. Hệ thống sẽ giải quyết được những khó khăn trên. Khi mà công nghệ thông tin phát triển mạnh, mạng internet về tận từng hộ gia đình, người dân thường xuyên tiếp xúc với máy tính, mạng internet thì hệ thống ra đời là rất phù hợp với tình hình thực tiễn. Đặc biệt với những người bận rộn không có thời gian ra bến xe mua vé thì với những cái click chuột mà mua được vé xe thì điều này thật có ý nghĩa. Khi hệ thống đưa vào hoạt động không chỉ mạng lại sự tiện lợi cho người dân trong việc mua vé xe mà còn giúp các công ty vận tải phục vụ hành khách tốt hơn. Các công ty sẽ quản lý tốt hơn lượng vé bán ra, có thể bán vé xe tới tận tay người có nhu cầu thực sự. Từ đó nâng cao chất lượng phục vụ, nâng cao sức cạnh tranh của công ty và góp phần giữ gìn trật tự xã hội, xây dựng xã hội văn minh hơn. Hệ thống được xây dựng dựa trên sự khảo sát thực tế ở các bến xe. Đa số các công ty vận tải vẫn chưa có hệ thống bán vé xe qua website mà vẫn bán vé theo cách truyền thống. Vì vậy hệ thống đặt vé xe khách chất lượng cao là một đòi hỏi cần thiết để các công ty vận tải phục vụ tốt hơn cho những thượng đế của mình. Mục tiêu của đề tài Từ thực tế đặt ra, tôi nhận thấy xây dựng một hệ thống đặt vé xe khách chất lượng cao là vô cùng cần thiết. Mục tiêu của khóa luận là xây dựng và triển khai hệ thống đặt vé xe khách chất lượng cao. Mục tiêu của khóa luận: Xây dựng một hệ thống giúp khách hàng có thể đặt vé khách trực tuyến Hỗ trợ nhân viên có thể dễ dàng thực hiện các nghiệp vụ quản lý các chuyến xe của công ty. Nhân viên bán vé có thể dễ dàng cập nhật khách hàng gọi điện thoại đến đặt vé. Hệ thống hỗ trợ phân quyền người dùng, đảm bảo tính bảo mật, an toàn của hệ thống. Giúp nhân viên quản lý lập các báo cáo phục vụ lãnh đạo trong việc quản lý, điều hành công ty. Phạm vi của đề tài Tạo ra một hệ thống website cho một công ty xe khách chất lượng cao nhằm cho phép khách hàng đặt mua vé trực tuyến. Khách hàng có thể chọn đặt thông tin về chuyến xe mình cần đi; nhân viên bán vé có thể xem thông tin về những khách hàng trên chuyến xe đó. Hệ thống website sẽ bao gồm những trang web chính như sau: Phần trang dành cho khách hàng Form đăng ký tài khoản đăng nhập gồm các thông tin: Họ tên, tên tài khoản, mật khẩu, số điện thoại, địa chỉ, email. Form đăng nhập hệ thống gồm: Tài khoản và mật khẩu. Xem, tìm kiếm thông tin khuyến mại, thông tin về các chuyến xe như: Loại xe, số ghế còn trống, ngày đi, giờ đi, điểm đến, giá vé. Form đặt vé, hủy vé đã đặt, hoặc sửa đổi thông tin đặt vé. Form thanh toán trực tuyến. Phần trang dành cho nhân viên quản lý Form đăng nhập vào hệ thống. Nhân viên bán vé: Đặt vé cho khách hàng gọi điện thoại đến. Cập nhật sửa thông tin đặt vé của khách hàng. Hủy vé của khách hàng nếu quá hạn không thanh toán. Lập báo cáo theo yêu cầu của cấp trên. Nhân viên điều xe: Tạo mới lịch trình xe chạy. Cập nhật thông tin lịch trình. Lập báo cáo theo yêu cầu của cấp trên. Nhân viên quản lý bến xe Cập nhật các loại xe, số xe đưa vào sử dụng. Cập nhật các địa điểm đến. Nhân viên quản trị Tạo mới, xóa tài khoản đăng nhập hệ thống. Cấp quyền cho tài khoản. CHƯƠNG 2 TỔNG QUAN VỀ UML VÀ UML 2.0 Tổng quan về UML Lịch sử ra đời của UML Những năm đầu của thập kỷ 90 đã có rất nhiều phương pháp phân tích, thiết kế hệ thống hướng đối tượng với các hệ thống ký hiệu khác nhau. Trong đó có 3 phương pháp phổ biến nhất là OMT (Object Modeling Technique) của James Rumbaugh, Booch của Grady Booch và OOSE (Object – Oriented Software Engienering) của Ivar Jacobson. Mỗi phương pháp đều có những điểm mạnh điểm yếu. Như OMT mạnh trong khâu phân tích và yếu ở khâu thiết kế, Booch mạnh trong khâu thiết kế và yếu ở khâu phân tích, còn OOSE mạnh ở phân tích các ứng xử, đáp ứng của hệ thống mà yếu trong các khâu khác. Mỗi phương pháp luận và ngôn ngữ đều có những hệ thống ký hiệu riêng, phương pháp xử lý riêng và công cụ hỗ trợ riêng. Điều này đã thúc đẩy những người đi tiên phong trong lĩnh vực mô hình hóa hướng đối tượng ngồi lại với nhau để tích hợp các điểm mạnh của mỗi phương pháp với nhau và đưa ra mô hình thống nhất chung. James Rumbaugh, Grady Booch và Ivar Jacobson đã cùng xây dựng một ngôn ngữ mô hình hóa thống nhất và đặt tên là UML (Unifiled Modeling Language). UML đầu tiên được đưa ra vào năm 1997 và sau đó được chuẩn hóa thành phiên bản 1.0. Hiện nay đã có bản 2.0. UML là ngôn ngữ để trực quan hóa Sử dụng UML trong việc lập mô hình, mỗi ký hiệu mang một ý nghĩa rõ ràng và duy nhất nên một nhà phát triển phần mềm có thể đọc được mô hình xây dựng bằng UML do một người khác viết. Việc nắm bắt cấu trúc chương trình thông qua đọc mã lệnh là rất khó khăn thì nay được thể hiện trực quan. Sử dụng UML làm cho mô hình rõ ràng, sáng sủa làm tăng khả năng giao tiếp, trao đổi giữa các nhà phát triển. UML là ngôn ngữ dùng để chi tiết hóa Chi tiết hóa có nghĩa là xây dựng các mô hình một cách tỉ mỉ, rõ ràng, đầy đủ ở các mức độ chi tiết khác nhau. UML thực hiện việc chi tiết hóa tất cả các quyết định quan trọng trong phân tích, thiết kế và thực thi một hệ thống phần mềm. UML là ngôn ngữ dùng để sinh ra mã ở dạng nguyên mẫu Các mô hình xây dựng bằng UML có thể ánh xạ tới một ngôn ngữ lập trình cụ thể như Java, C++ hay cả các bảng trong một CSDL quan hệ hay CSDL hướng đối tượng. Một mô hình tốt trở nên vô nghĩa nếu nó không phản ánh đúng hệ thống nên đòi hỏi phải có một cơ chế đồng bộ hóa giữa mô hình và mã lệnh. UML cho phép xây dựng một mô hình từ các mã lệnh thực thi (ánh xạ ngược). Điều này tạo ra sự nhất quán giữa mô hình của hệ thống và các đoạn mã thực thi mà ta xây dựng cho hệ thống đó. UML là ngôn ngữ dùng để lập và cung cấp tài liệu Dưới đây là các loại tài liệu mà UML cung cấp: Các yêu cầu của khách hàng. Kiến trúc hệ thống. Thiết kế. Mã nguồn Kế hoạch dự án. ……. Các thành phần của UML Các phần tử mang tính cấu trúc Các phần tử mang tính cấu trúc gồm: Lớp (Class) Là một tập hợp các đối tượng có cùng một tập thuộc tính, các hành vi và các mối quan hệ với các đối tượng khác. Sự cộng tác (Collaboration) Là một giải pháp thi hành bên trong hệ thống, bao gồm các lớp/đối tương, mối quan hệ và sự tương tác giữa chúng để đạt được một chức năng mong đợi của Use Case. Giao diện (Interface) Là một tập hợp các phương thức tạo nên dịch vụ của một lớp hoặc một thành phần. Các phương thức chỉ dừng ở mức khai báo không phải ở mức thực thi. Ca sử dụng (Use Case) Là một khối chức năng được thực hiện bởi hệ thống để mang lại một kết quả có giá trị đối với một tác nhân nào đó. Thành phần (Component) Là biểu diễn vật lý của mã nguồn như các file mã nguồn, file nhị phân được tạo ra trong quá triển phát triển hệ thống. Lớp hoạt động (Active Class) Là một lớp mà các đối tượng của nó thực hiện các hoạt động điều khiển. Nodes Là thể hiện một thành phần vật lý như là một máy tính hay một thiết bị phần cứng. Các phần tử thể hiện hành vi Các phần tử thể hiện hành vi bao gồm: Sự tương tác (Interaction) Gồm một tập các thông báo trao đổi giữa các đối tượng trong một ngữ cảnh cụ thể nào đó để thực hiện một chức năng nào đó. Máy chuyển trạng thái ( States Machine) Thể hiện trạng thái của đối tượng khi có các sự kiện hay tác động từ bên ngoài vào. Các phần tử mang tính nhóm Các phần tử mang tính nhóm bao gồm: Gói (Package) Để nhóm các phần tử có một ý nghĩa chung nào đó vào thành nhóm. Nhóm chỉ mang tính trừu tượng và dùng để nhìn hệ thống ở mức tổng quát hơn. Ghi chú (Annotational) Là các chú thích dùng để mô tả, sáng tỏ và ghi chú về bất cứ phần tử nào có trong mô hình. Các mối quan hệ Các mối quan hệ trong UML là: Quan hệ phụ thuộc (Dependency) Nếu có sự thay đổi ở đối tượng độc lập thì đối tượng phụ thuộc sẽ bị ảnh hưởng. Quan hệ kết hợp (Association) Là mối quan hệ giữa hai lớp khi nhận và gửi thông điệp cho nhau. Quan hệ kết tập (Aggreagation) Là một dạng đặc biệt của quan hệ liên kết. Là mối quan hệ toàn thể - bộ phận. Quan hệ gộp (Compostion) Là một dạng của quan hệ kết tập, nếu đối tượng toàn thể bị hủy thì các đối tượng bộ phận của nó cũng bị hủy theo. Quan hệ tổng quát hóa (Generalization) Là mối quan hệ thổng quát hóa, trong đó đối tượng cụ thể sẽ kế thừa thuộc tính và phương thức của đối tượng tổng quát hóa Quan hệ hiện thức hóa (Realization) Là mối quan hệ giữa giao diện và lớp hay các thành phần. Các loại biểu đồ UML cung cấp các loại biểu đồ sau: Biểu đồ lớp (Class Diagram) Bao gồm tập hợp các lớp, các giao diện, sự cộng tác và các mối quan hệ giữa chúng. Nó thể hiện mặt tĩnh hệ thống. Biểu đối tượng (Object Diagram) Bao gồm tập hợp các đối tượng và các mối quan hệ của chúng Biểu đồ ca sử dụng (Use Case Diagram) Bao gồm các ca sử dụng, các tác nhân và mối quan hệ giữa chúng. Biểu đồ trạng thái (State Diagram) Bao gồm các trạng thái, các bước chuyển trạng thái và các hoạt động. Biểu đồ tuần tự (Sequence Diagram) Biểu diễn sự tương tác giữa các đối tượng theo thứ tự thời gian. Biểu đồ cộng tác (Collaboration Diagram) Gần giống như biểu đồ tuần tự, thể hiện việc trao đổi thông điệp qua lại giữa các đối tượng mà không quan tâm đến thứ tự các thông báo đó. Biểu đồ hoạt động (Activity Diagram) Chỉ ra luồng đi từ hoạt động này sang hoạt động khác trong hệ thống. Biểu đồ thành phần (Component Diagram) Chỉ ra cách tổ chức và sự phụ thuộc giữa các thành phần (component). Biểu đồ triển khai (Deployment Diagram) Mô tả các tài nguyên vật lý trong hệ thống, gồm các nút (Nodes), thành phần và kết nối. Biểu đồ gói (Package Diagram) Phản ánh sự tổ chức các gói và các thành phần của chúng. Biểu đồ liên lạc (Communication Diagram) Biểu đồ liên lạc thể hiện thông tin giống như biểu đồ tuần tự nhưng nó nhấn mạnh vào mối quan hệ giữa các đối tượng. Các cơ chế chung của UML ( General Mechnism) Các cơ chế chung mà UML cung cấp gồm: Trang trí (Adornment) Các ký hiệu trong UML giúp nhận biết các đặc điểm quan trọng của đối tượng, khái niệm được mô tả một cách dễ dàng và nhanh chóng. Ghi chú (Note) Ghi chú trong UML giúp một thành phần nào đó trong biểu đồ không bị hiểu lầm. Đặc tả (Specification) Các phần tử mô hình có thuộc tính chứa các giá trị về phần tử này. Một thuộc tính được định nghĩa với một tên và một giá trị đính kèm. Thuộc tính được sử dụng để thêm các đặc tả bổ sung về một phần tử, những thông tin bình thường ra không được thể hiện trong bản đồ. Kiến trúc của hệ thống Khi xem xét một hệ thống, chúng ta cần xây dựng các mô hình từ những khía cạnh khác nhau, xuất phát từ thực tế là những người làm việc với hệ thống với những vai trò khác nhau sẽ nhìn hệ thống từ những khía cạnh khác nhau. UML xét hệ thống trên 5 khía cạnh: Hướng nhìn Use Case Đây là hướng nhìn chỉ ra khía cạnh chức năng của một hệ thống, nhìn từ hướng tác nhân bên ngoài. Hướng nhìn Logic Chỉ ra chức năng bên trong hệ thống được thiết kế như thế nào. Hướng nhìn thành phần Chỉ ra khía cạnh tổ chức của các thành phần code. Hướng nhing song song Chỉ ra sự tồn tại song song/trùng hợp trong hệ thống, hướng đến việc giao tiếp và đồng bộ trong hệ thống. Hướng nhìn triển khai Chỉ ra khía cạnh triển khai hệ thống vào các kiến trúc vật lý. Mở rộng UML UML có thể được mở rộng hoặc có thể được sửa đổi để phù hợp với một phương pháp đặc biệt, một tổ chức cụ thể hay một người dùng cụ thể. Khuôn mẫu (Stereotype) Cơ chế mở rộng khuôn mẫu định nghĩa một loại phần tử mô hình dựa trên một phần tử mô hình đã tồn tại. Khuôn mẫu có thể là một phần tử đã có sẵn, cộng thêm phần quy định ngữ nghĩa riêng biệt không có trong phần tử gốc. Giá trị đính kèm (Tagged Value) Các phần tử mô hình có thể có các thuộc tính chứa một cặp – tên giá trị về bản thân chúng được gọi là các giá trị đính kèm. Mọi dạng thông tin đều có thể được đính kèm vào phần tử. Rằng buộc (Constraint) Là một sự giới hạn về sự sử dụng hoặc ý nghĩa của một phần tử. Giới thiệu về UML 2.0 Những cải tiến trong UML 2.0 đã nhanh chóng trở thành chuẩn được chấp nhận trong việc nhận định, làm tài liệu, và mường tượng về hệ thống phần mềm. UML cũng được sử dụng trong việc mô hình hóa hệ thống không phải là hệ thống phần mềm, và nó được dùng một cách rộng rãi trong hầu hết các lĩnh vực công nghiệp gồm tài chính, quân đội, thiết kế. UML 2.0 định nghĩa 13 loại biểu đồ cơ bản và được chia làm hai nhóm: nhóm biểu đồ cấu trúc (Structural Modeling Diagram) và nhóm biểu đồ hành vi (Behavioral Modeling Diagram). Trong đó 11 loại đầu tiên giống như trong UML 1.0. và có 2 biểu đồ mới. Biểu đồ tương tác (Interaction Overview Diagram) Biểu đồ tương tác là một dạng của biểu đồ hoạt động với các nút (Node) biểu diễn biểu đồ tương tác. Biểu đồ tương tác có thể bao gồm biểu đồ tuần tự, biểu đồ liên lạc, biểu đồ tương tác và biểu đồ phối hợp thời gian. Hầu hết các ghi chú cho biểu đồ tương tác giống biểu đồ hoạt động. Ví dụ như các nút khởi tạo, kết thúc, quyết định, kết hợp, phân nhánh, nối là giống nhau. Tuy nhiên, biểu đồ tương tác có hai thành phần mới là sự kiện tương tác và phần tử tương tác (interaction occurrences and interaction elements). Sự kiện tương tác (interaction occurrence): sự kiện tương tác được tham chiếu tới biểu đồ tương tác hiện hành. Một sự kiện tương tác thể hiện như một khung tham chiếu, nghĩa là một khung với tham chiếu tới góc trái trên cùng. Hình 1. Biểu đồ hoạt động Phần tử tương tác (Interaction Element): các phần tử tương tác tương tự các sự kiện tương tác ở chỗ chúng hiển thị một sự tham chiếu tới biểu đồ tương tác hiện hành. Chúng khác nhau ở chỗ phần tử tương tác hiển thị nội dung biểu đồ tham chiếu trực tiếp. Hình 2. Biểu đồ tương tác Biểu đồ thời gian (Timing Diagram) Biểu đồ phối hợp thời gian dùng để hiện thị sự thay đổi trạng thái hay giá trị của một hay nhiều phần tử theo thời gian (over time). Nó cũng hiển thị sự tương tác giữa các sự kiện trong quá khứ và hiện tại và khoảng thời gian điều chỉnh chúng. State lifeline: thể hiện sự thay đổi trạng thái của một item theo thời gian. Trục X thể hiện thời gian của bất kỳ bộ nào được chọn, trục Y được gán một danh sách các trạng thái. Hình 3. Biểu đồ State lifeline Value lifeline: Một giá trị trên state lifeline biểu diễn sự thay đổi giá trị của một item theo thời gian. Trục X cũng thể hiện thời gian của bất kỳ bộ nào được chọn. Giá trị được thể hiện ở giữa hai đường thẳng ngang chỗ giao nhau tại mỗi sự thay đổi giá trị. Hình 4. Biểu đồ Value lifeline Putting it all together Trong bất kỳ sự kết hợp nào, state lifeline và value lifeline này có thể xếp chồng lên đỉnh của một state lifeline và value lifeline khác. Chúng phải có cùng một trục X. Thông điệp có thể chuyển từ state lifeline này sang state lifeline khác. Mỗi sự chuyển tiếp trạng thái hoặc giá trị có thể có một sự kiện được định nghĩa, một thời điểm hạn chế để chỉ ra khi nào một sự kiện phải xuất hiện, và tong tại trong khoảng thời gian bao lâu. Hình 5. Biểu đồ kết hợp nhiều State lifeline và Value lifeline CHƯƠNG 3 PHÂN TÍCH THIẾT KẾ HỆ THỐNG Đặc tả yêu cầu hệ thống Mô tả tổng thể Hệ thống được xây dựng mới hoàn toàn. Trên thực tế mới có đặt vé máy bay, gọi tắc xi, thuê xe khách qua mạng. Các chức năng của hệ thống Chức năng quản trị: Tạo, xóa, sửa tài khoản đăng nhập hệ thống Chức năng quản lý Quản lý đặt vé: Đặt vé, hủy vé, sửa thông tin về vé cho khách hàng gọi điện đến, hủy vé đã quá hạn thanh toán. Quản lý lịch trình: Thêm, sửa thông tin , hủy chuyến xe. Quản lý điểm đến: Thêm mới, sửa thông tin, hủy điểm đến. Quản lý loại xe: Thêm mới, sửa thông tin, xóa loại xe đưa vào sử dụng. Quản lý xe khách: Thêm mới, sửa thông tin, xóa xe khách hoạt động Chức năng người sử dụng bình thường: Xem, tìm kiếm thông tin về lịch trình xe chạy, đặt vé, xóa, sửa thông tin đặt vé, thanh toan trực tuyến. Người sử dụng Khách: Có quyền tìm kiếm, xem thông tin vĐẠI HỌC QUỐC GIA HÀ NỘI TRƯỜNG ĐẠI HỌC CÔNG NGHỆ Bùi Thị Tiếp XÂY DỰNG HỆ THỐNG ĐẶT VÉ XE KHÁCH CHẤT LƯỢNG CAO KHOÁ LUẬN TỐT NGHIỆP ĐẠI HỌC HỆ CHÍNH QUY Ngành: Công Nghệ Thông Tin HÀ NỘI – 2009 ĐẠI HỌC QUỐC GIA HÀ NỘI TRƯỜNG ĐẠI HỌC CÔNG NGHỆ Bùi Thị Tiếp XÂY DỰNG HỆ THỐNG ĐẶT VÉ XE KHÁCH CHẤT LƯỢNG CAO KHOÁ LUẬN TỐT NGHIỆP ĐẠI HỌC HỆ CHÍNH QUY Ngành: Công Nghệ Thông Tin Cán bộ hướng dẫn: ThS. Tô Văn Khánh HÀ NỘI – 2009 LỜI CẢM ƠN Trong quá trình nghiên cứu và hoàn thành khóa luận tôi đã nhân được nhiều sự giúp đỡ ân cần của gia đình, quý thầy cô và bạn bè. Tôi xin được bày tỏ lòng cảm ơn chân thành tới quý thầy cô giáo trong trường Đại học Công Nghệ - Đại học Quốc Gia Hà Nội. Đặc biệt là thầy cô trong Bộ môn Công nghệ Phần mềm, đã dạy dỗ dìu dắt tôi trong quá trình học tập cũng như quá trình hoàn thành khóa luận. Tôi xin được gửi lời cảm ơn sâu sắc tới thầy giáo thạc sỹ Tô Văn Khánh – người trực tiếp hướng dẫn tôi làm khóa luận. Thầy đã tận tình hướng dẫn và giúp tôi sửa chữa những sai sót trong quá trình thực hiện đề tài. Cuối cùng, tôi xin bày tỏ lòng biết ơn chân thành tới gia đình và bạn bè tôi. Những người đã luôn động viên giúp đỡ tôi trong quá trình học tập cũng như trong cuộc sống. Và tôi xin gửi lời cám ơn sâu sắc tới anh – một Người đặc biệt luôn dõi theo tôi từng bước trong học tập cũng như cuộc sống hàng ngày. Và sự động viên kịp thời của anh giúp tôi có thêm nghị lực để hoàn thành khóa luận này. Đề tài “Xây dựng hệ thống đặt vé xe khách chất lượng cao” được hoàn thành trong thời gian ngắn nên không tránh được những sai sót khiếm khuyết. Tôi rất mong nhận được ý kiến đóng góp của quý thầy cô và bạn bè để hệ thống ngày càng hoàn thiện hơn. Xin chân thành cảm ơn! Hà Nội, ngày 15 tháng 05 năm 2009 Bùi Thi tiếp TÓM TẮT NỘI DUNG KHÓA LUẬN Khóa luận trình bày về quy trình nghiệm vụ của quá trình đặt vé xe khách qua mạng. Đồng thời sẽ trình bày về ngôn ngữ mô hình hóa UML – công cụ phân tích thiết kế hệ thống hướng đối tượng. Trên cơ sở đó sẽ phân tích thiết kế hệ thống đặt vé xe khách chất lượng cao. Hệ thống hoàn thành sẽ giúp cho việc mua bán vé xe thuận lợi hơn cũng như trợ giúp công ty vận tải quản lý các hoạt động hiệu quả hơn. Hệ thống có các chức năng sau: Quản lý khách hàng, quản lý danh mục, quản lý người dùng và quản trị hệ thống. Khóa luận gồm các phần sau : Tổng quan về UML: Giới thiệu tổng quan về UML và những cải tiến của UML 2.0. Mô tả bài toán nghiệp vụ: Mô tả hoạt động chính của quy trình đặt mua vé qua mạng. Nắm bắt yêu cầu hệ thống: Xác định các chức năng chính của hệ thống, các nhóm người sử dụng, các yêu cầu về hệ thống. Phân tích thiết kế hệ thống: Phân tích hệ thống theo hướng đối tượng, phân rã các chức năng hệ thống. Cài đặt thử nghiệm hệ thống: Cài đặt một số chức năng của hệ thống. Kết luận và hướng phát triển: Chỉ ra những kết quả thu được, những hạn chế và hướng phát triển hệ thống. MỤC LỤC CÁC KÍ HIỆU VIẾT TẮT TRONG KHÓA LUẬN Từ tiếng anh UML Unified Modeling Language Từ tiếng việt CNTT Công Nghệ Thông Tin CSDL Cơ Sở Dữ Liệu NSD Người Sử Dụng NV Nhân Viên QL Quản Lý CHƯƠNG 1 MỞ ĐẦU Cơ sở lựa chọn đề tài Kinh tế xã hội ngày càng phát triển, hội nhập kinh tế quốc tế ngày càng mạnh, sự chuyển dịch cơ cấu kinh tế giữa các vùng miền ngày càng cao. Cơ cấu lao động cũng có sự dịch chuyển mạnh mẽ. Từ đó kéo theo sự di chuyển chỗ ở, chỗ làm việc của rất nhiều người. Mọi người có nhu cầu đi lại ngày càng nhiều. Mặt khác, do kinh tế phát triển nên nhu cầu đi thăm quan, thăm viếng người nhà ở xa tăng. Trên thực tế nhu cầu đi lại của người dân tăng đột biến. Và với cách mua và bán vé xe truyền thống đã không đáp ứng được nhu cầu bức xúc đó. Thường diễn ra cảnh chen lấn xô đẩy để mua vé. Từ thực tế đó đã gây cho người dân rất nhiều bức xúc như chờ vài tiếng mà không mua được vé, đến lượt mua vé thì được thông báo hết vé. Còn đối với các công ty vận tải thì cũng gặp khó khăn trong việc tổ chức bán vé xe. Cảnh chen lấn xô đẩy đó đã tạo điều kiện cho bọn móc túi, cướp giật, bán vé chợ đen hoạt động. Càng làm cho tình hình thêm tồi tệ, người dân và doanh nghiệp càng thêm bức xúc. Từ những bức xúc đó, nên tôi đã quyết định chọn đề tài khóa luận tốt nghiệp là xây dựng hệ thống website đặt vé xe khách chất lượng cao. Hệ thống sẽ giải quyết được những khó khăn trên. Khi mà công nghệ thông tin phát triển mạnh, mạng internet về tận từng hộ gia đình, người dân thường xuyên tiếp xúc với máy tính, mạng internet thì hệ thống ra đời là rất phù hợp với tình hình thực tiễn. Đặc biệt với những người bận rộn không có thời gian ra bến xe mua vé thì với những cái click chuột mà mua được vé xe thì điều này thật có ý nghĩa. Khi hệ thống đưa vào hoạt động không chỉ mạng lại sự tiện lợi cho người dân trong việc mua vé xe mà còn giúp các công ty vận tải phục vụ hành khách tốt hơn. Các công ty sẽ quản lý tốt hơn lượng vé bán ra, có thể bán vé xe tới tận tay người có nhu cầu thực sự. Từ đó nâng cao chất lượng phục vụ, nâng cao sức cạnh tranh của công ty và góp phần giữ gìn trật tự xã hội, xây dựng xã hội văn minh hơn. Hệ thống được xây dựng dựa trên sự khảo sát thực tế ở các bến xe. Đa số các công ty vận tải vẫn chưa có hệ thống bán vé xe qua website mà vẫn bán vé theo cách truyền thống. Vì vậy hệ thống đặt vé xe khách chất lượng cao là một đòi hỏi cần thiết để các công ty vận tải phục vụ tốt hơn cho những thượng đế của mình. Mục tiêu của đề tài Từ thực tế đặt ra, tôi nhận thấy xây dựng một hệ thống đặt vé xe khách chất lượng cao là vô cùng cần thiết. Mục tiêu của khóa luận là xây dựng và triển khai hệ thống đặt vé xe khách chất lượng cao. Mục tiêu của khóa luận: Xây dựng một hệ thống giúp khách hàng có thể đặt vé khách trực tuyến Hỗ trợ nhân viên có thể dễ dàng thực hiện các nghiệp vụ quản lý các chuyến xe của công ty. Nhân viên bán vé có thể dễ dàng cập nhật khách hàng gọi điện thoại đến đặt vé. Hệ thống hỗ trợ phân quyền người dùng, đảm bảo tính bảo mật, an toàn của hệ thống. Giúp nhân viên quản lý lập các báo cáo phục vụ lãnh đạo trong việc quản lý, điều hành công ty. Phạm vi của đề tài Tạo ra một hệ thống website cho một công ty xe khách chất lượng cao nhằm cho phép khách hàng đặt mua vé trực tuyến. Khách hàng có thể chọn đặt thông tin về chuyến xe mình cần đi; nhân viên bán vé có thể xem thông tin về những khách hàng trên chuyến xe đó. Hệ thống website sẽ bao gồm những trang web chính như sau: Phần trang dành cho khách hàng Form đăng ký tài khoản đăng nhập gồm các thông tin: Họ tên, tên tài khoản, mật khẩu, số điện thoại, địa chỉ, email. Form đăng nhập hệ thống gồm: Tài khoản và mật khẩu. Xem, tìm kiếm thông tin khuyến mại, thông tin về các chuyến xe như: Loại xe, số ghế còn trống, ngày đi, giờ đi, điểm đến, giá vé. Form đặt vé, hủy vé đã đặt, hoặc sửa đổi thông tin đặt vé. Form thanh toán trực tuyến. Phần trang dành cho nhân viên quản lý Form đăng nhập vào hệ thống. Nhân viên bán vé: Đặt vé cho khách hàng gọi điện thoại đến. Cập nhật sửa thông tin đặt vé của khách hàng. Hủy vé của khách hàng nếu quá hạn không thanh toán. Lập báo cáo theo yêu cầu của cấp trên. Nhân viên điều xe: Tạo mới lịch trình xe chạy. Cập nhật thông tin lịch trình. Lập báo cáo theo yêu cầu của cấp trên. Nhân viên quản lý bến xe Cập nhật các loại xe, số xe đưa vào sử dụng. Cập nhật các địa điểm đến. Nhân viên quản trị Tạo mới, xóa tài khoản đăng nhập hệ thống. Cấp quyền cho tài khoản. CHƯƠNG 2 TỔNG QUAN VỀ UML VÀ UML 2.0 Tổng quan về UML Lịch sử ra đời của UML Những năm đầu của thập kỷ 90 đã có rất nhiều phương pháp phân tích, thiết kế hệ thống hướng đối tượng với các hệ thống ký hiệu khác nhau. Trong đó có 3 phương pháp phổ biến nhất là OMT (Object Modeling Technique) của James Rumbaugh, Booch của Grady Booch và OOSE (Object – Oriented Software Engienering) của Ivar Jacobson. Mỗi phương pháp đều có những điểm mạnh điểm yếu. Như OMT mạnh trong khâu phân tích và yếu ở khâu thiết kế, Booch mạnh trong khâu thiết kế và yếu ở khâu phân tích, còn OOSE mạnh ở phân tích các ứng xử, đáp ứng của hệ thống mà yếu trong các khâu khác. Mỗi phương pháp luận và ngôn ngữ đều có những hệ thống ký hiệu riêng, phương pháp xử lý riêng và công cụ hỗ trợ riêng. Điều này đã thúc đẩy những người đi tiên phong trong lĩnh vực mô hình hóa hướng đối tượng ngồi lại với nhau để tích hợp các điểm mạnh của mỗi phương pháp với nhau và đưa ra mô hình thống nhất chung. James Rumbaugh, Grady Booch và Ivar Jacobson đã cùng xây dựng một ngôn ngữ mô hình hóa thống nhất và đặt tên là UML (Unifiled Modeling Language). UML đầu tiên được đưa ra vào năm 1997 và sau đó được chuẩn hóa thành phiên bản 1.0. Hiện nay đã có bản 2.0. UML là ngôn ngữ để trực quan hóa Sử dụng UML trong việc lập mô hình, mỗi ký hiệu mang một ý nghĩa rõ ràng và duy nhất nên một nhà phát triển phần mềm có thể đọc được mô hình xây dựng bằng UML do một người khác viết. Việc nắm bắt cấu trúc chương trình thông qua đọc mã lệnh là rất khó khăn thì nay được thể hiện trực quan. Sử dụng UML làm cho mô hình rõ ràng, sáng sủa làm tăng khả năng giao tiếp, trao đổi giữa các nhà phát triển. UML là ngôn ngữ dùng để chi tiết hóa Chi tiết hóa có nghĩa là xây dựng các mô hình một cách tỉ mỉ, rõ ràng, đầy đủ ở các mức độ chi tiết khác nhau. UML thực hiện việc chi tiết hóa tất cả các quyết định quan trọng trong phân tích, thiết kế và thực thi một hệ thống phần mềm. UML là ngôn ngữ dùng để sinh ra mã ở dạng nguyên mẫu Các mô hình xây dựng bằng UML có thể ánh xạ tới một ngôn ngữ lập trình cụ thể như Java, C++ hay cả các bảng trong một CSDL quan hệ hay CSDL hướng đối tượng. Một mô hình tốt trở nên vô nghĩa nếu nó không phản ánh đúng hệ thống nên đòi hỏi phải có một cơ chế đồng bộ hóa giữa mô hình và mã lệnh. UML cho phép xây dựng một mô hình từ các mã lệnh thực thi (ánh xạ ngược). Điều này tạo ra sự nhất quán giữa mô hình của hệ thống và các đoạn mã thực thi mà ta xây dựng cho hệ thống đó. UML là ngôn ngữ dùng để lập và cung cấp tài liệu Dưới đây là các loại tài liệu mà UML cung cấp: Các yêu cầu của khách hàng. Kiến trúc hệ thống. Thiết kế. Mã nguồn Kế hoạch dự án. ……. Các thành phần của UML Các phần tử mang tính cấu trúc Các phần tử mang tính cấu trúc gồm: Lớp (Class) Là một tập hợp các đối tượng có cùng một tập thuộc tính, các hành vi và các mối quan hệ với các đối tượng khác. Sự cộng tác (Collaboration) Là một giải pháp thi hành bên trong hệ thống, bao gồm các lớp/đối tương, mối quan hệ và sự tương tác giữa chúng để đạt được một chức năng mong đợi của Use Case. Giao diện (Interface) Là một tập hợp các phương thức tạo nên dịch vụ của một lớp hoặc một thành phần. Các phương thức chỉ dừng ở mức khai báo không phải ở mức thực thi. Ca sử dụng (Use Case) Là một khối chức năng được thực hiện bởi hệ thống để mang lại một kết quả có giá trị đối với một tác nhân nào đó. Thành phần (Component) Là biểu diễn vật lý của mã nguồn như các file mã nguồn, file nhị phân được tạo ra trong quá triển phát triển hệ thống. Lớp hoạt động (Active Class) Là một lớp mà các đối tượng của nó thực hiện các hoạt động điều khiển. Nodes Là thể hiện một thành phần vật lý như là một máy tính hay một thiết bị phần cứng. Các phần tử thể hiện hành vi Các phần tử thể hiện hành vi bao gồm: Sự tương tác (Interaction) Gồm một tập các thông báo trao đổi giữa các đối tượng trong một ngữ cảnh cụ thể nào đó để thực hiện một chức năng nào đó. Máy chuyển trạng thái ( States Machine) Thể hiện trạng thái của đối tượng khi có các sự kiện hay tác động từ bên ngoài vào. Các phần tử mang tính nhóm Các phần tử mang tính nhóm bao gồm: Gói (Package) Để nhóm các phần tử có một ý nghĩa chung nào đó vào thành nhóm. Nhóm chỉ mang tính trừu tượng và dùng để nhìn hệ thống ở mức tổng quát hơn. Ghi chú (Annotational) Là các chú thích dùng để mô tả, sáng tỏ và ghi chú về bất cứ phần tử nào có trong mô hình. Các mối quan hệ Các mối quan hệ trong UML là: Quan hệ phụ thuộc (Dependency) Nếu có sự thay đổi ở đối tượng độc lập thì đối tượng phụ thuộc sẽ bị ảnh hưởng. Quan hệ kết hợp (Association) Là mối quan hệ giữa hai lớp khi nhận và gửi thông điệp cho nhau. Quan hệ kết tập (Aggreagation) Là một dạng đặc biệt của quan hệ liên kết. Là mối quan hệ toàn thể - bộ phận. Quan hệ gộp (Compostion) Là một dạng của quan hệ kết tập, nếu đối tượng toàn thể bị hủy thì các đối tượng bộ phận của nó cũng bị hủy theo. Quan hệ tổng quát hóa (Generalization) Là mối quan hệ thổng quát hóa, trong đó đối tượng cụ thể sẽ kế thừa thuộc tính và phương thức của đối tượng tổng quát hóa Quan hệ hiện thức hóa (Realization) Là mối quan hệ giữa giao diện và lớp hay các thành phần. Các loại biểu đồ UML cung cấp các loại biểu đồ sau: Biểu đồ lớp (Class Diagram) Bao gồm tập hợp các lớp, các giao diện, sự cộng tác và các mối quan hệ giữa chúng. Nó thể hiện mặt tĩnh hệ thống. Biểu đối tượng (Object Diagram) Bao gồm tập hợp các đối tượng và các mối quan hệ của chúng Biểu đồ ca sử dụng (Use Case Diagram) Bao gồm các ca sử dụng, các tác nhân và mối quan hệ giữa chúng. Biểu đồ trạng thái (State Diagram) Bao gồm các trạng thái, các bước chuyển trạng thái và các hoạt động. Biểu đồ tuần tự (Sequence Diagram) Biểu diễn sự tương tác giữa các đối tượng theo thứ tự thời gian. Biểu đồ cộng tác (Collaboration Diagram) Gần giống như biểu đồ tuần tự, thể hiện việc trao đổi thông điệp qua lại giữa các đối tượng mà không quan tâm đến thứ tự các thông báo đó. Biểu đồ hoạt động (Activity Diagram) Chỉ ra luồng đi từ hoạt động này sang hoạt động khác trong hệ thống. Biểu đồ thành phần (Component Diagram) Chỉ ra cách tổ chức và sự phụ thuộc giữa các thành phần (component). Biểu đồ triển khai (Deployment Diagram) Mô tả các tài nguyên vật lý trong hệ thống, gồm các nút (Nodes), thành phần và kết nối. Biểu đồ gói (Package Diagram) Phản ánh sự tổ chức các gói và các thành phần của chúng. Biểu đồ liên lạc (Communication Diagram) Biểu đồ liên lạc thể hiện thông tin giống như biểu đồ tuần tự nhưng nó nhấn mạnh vào mối quan hệ giữa các đối tượng. Các cơ chế chung của UML ( General Mechnism) Các cơ chế chung mà UML cung cấp gồm: Trang trí (Adornment) Các ký hiệu trong UML giúp nhận biết các đặc điểm quan trọng của đối tượng, khái niệm được mô tả một cách dễ dàng và nhanh chóng. Ghi chú (Note) Ghi chú trong UML giúp một thành phần nào đó trong biểu đồ không bị hiểu lầm. Đặc tả (Specification) Các phần tử mô hình có thuộc tính chứa các giá trị về phần tử này. Một thuộc tính được định nghĩa với một tên và một giá trị đính kèm. Thuộc tính được sử dụng để thêm các đặc tả bổ sung về một phần tử, những thông tin bình thường ra không được thể hiện trong bản đồ. Kiến trúc của hệ thống Khi xem xét một hệ thống, chúng ta cần xây dựng các mô hình từ những khía cạnh khác nhau, xuất phát từ thực tế là những người làm việc với hệ thống với những vai trò khác nhau sẽ nhìn hệ thống từ những khía cạnh khác nhau. UML xét hệ thống trên 5 khía cạnh: Hướng nhìn Use Case Đây là hướng nhìn chỉ ra khía cạnh chức năng của một hệ thống, nhìn từ hướng tác nhân bên ngoài. Hướng nhìn Logic Chỉ ra chức năng bên trong hệ thống được thiết kế như thế nào. Hướng nhìn thành phần Chỉ ra khía cạnh tổ chức của các thành phần code. Hướng nhing song song Chỉ ra sự tồn tại song song/trùng hợp trong hệ thống, hướng đến việc giao tiếp và đồng bộ trong hệ thống. Hướng nhìn triển khai Chỉ ra khía cạnh triển khai hệ thống vào các kiến trúc vật lý. Mở rộng UML UML có thể được mở rộng hoặc có thể được sửa đổi để phù hợp với một phương pháp đặc biệt, một tổ chức cụ thể hay một người dùng cụ thể. Khuôn mẫu (Stereotype) Cơ chế mở rộng khuôn mẫu định nghĩa một loại phần tử mô hình dựa trên một phần tử mô hình đã tồn tại. Khuôn mẫu có thể là một phần tử đã có sẵn, cộng thêm phần quy định ngữ nghĩa riêng biệt không có trong phần tử gốc. Giá trị đính kèm (Tagged Value) Các phần tử mô hình có thể có các thuộc tính chứa một cặp – tên giá trị về bản thân chúng được gọi là các giá trị đính kèm. Mọi dạng thông tin đều có thể được đính kèm vào phần tử. Rằng buộc (Constraint) Là một sự giới hạn về sự sử dụng hoặc ý nghĩa của một phần tử. Giới thiệu về UML 2.0 Những cải tiến trong UML 2.0 đã nhanh chóng trở thành chuẩn được chấp nhận trong việc nhận định, làm tài liệu, và mường tượng về hệ thống phần mềm. UML cũng được sử dụng trong việc mô hình hóa hệ thống không phải là hệ thống phần mềm, và nó được dùng một cách rộng rãi trong hầu hết các lĩnh vực công nghiệp gồm tài chính, quân đội, thiết kế. UML 2.0 định nghĩa 13 loại biểu đồ cơ bản và được chia làm hai nhóm: nhóm biểu đồ cấu trúc (Structural Modeling Diagram) và nhóm biểu đồ hành vi (Behavioral Modeling Diagram). Trong đó 11 loại đầu tiên giống như trong UML 1.0. và có 2 biểu đồ mới. Biểu đồ tương tác (Interaction Overview Diagram) Biểu đồ tương tác là một dạng của biểu đồ hoạt động với các nút (Node) biểu diễn biểu đồ tương tác. Biểu đồ tương tác có thể bao gồm biểu đồ tuần tự, biểu đồ liên lạc, biểu đồ tương tác và biểu đồ phối hợp thời gian. Hầu hết các ghi chú cho biểu đồ tương tác giống biểu đồ hoạt động. Ví dụ như các nút khởi tạo, kết thúc, quyết định, kết hợp, phân nhánh, nối là giống nhau. Tuy nhiên, biểu đồ tương tác có hai thành phần mới là sự kiện tương tác và phần tử tương tác (interaction occurrences and interaction elements). Sự kiện tương tác (interaction occurrence): sự kiện tương tác được tham chiếu tới biểu đồ tương tác hiện hành. Một sự kiện tương tác thể hiện như một khung tham chiếu, nghĩa là một khung với tham chiếu tới góc trái trên cùng. Hình 1. Biểu đồ hoạt động Phần tử tương tác (Interaction Element): các phần tử tương tác tương tự các sự kiện tương tác ở chỗ chúng hiển thị một sự tham chiếu tới biểu đồ tương tác hiện hành. Chúng khác nhau ở chỗ phần tử tương tác hiển thị nội dung biểu đồ tham chiếu trực tiếp. Hình 2. Biểu đồ tương tác Biểu đồ thời gian (Timing Diagram) Biểu đồ phối hợp thời gian dùng để hiện thị sự thay đổi trạng thái hay giá trị của một hay nhiều phần tử theo thời gian (over time). Nó cũng hiển thị sự tương tác giữa các sự kiện trong quá khứ và hiện tại và khoảng thời gian điều chỉnh chúng. State lifeline: thể hiện sự thay đổi trạng thái của một item theo thời gian. Trục X thể hiện thời gian của bất kỳ bộ nào được chọn, trục Y được gán một danh sách các trạng thái. Hình 3. Biểu đồ State lifeline Value lifeline: Một giá trị trên state lifeline biểu diễn sự thay đổi giá trị của một item theo thời gian. Trục X cũng thể hiện thời gian của bất kỳ bộ nào được chọn. Giá trị được thể hiện ở giữa hai đường thẳng ngang chỗ giao nhau tại mỗi sự thay đổi giá trị. Hình 4. Biểu đồ Value lifeline Putting it all together Trong bất kỳ sự kết hợp nào, state lifeline và value lifeline này có thể xếp chồng lên đỉnh của một state lifeline và value lifeline khác. Chúng phải có cùng một trục X. Thông điệp có thể chuyển từ state lifeline này sang state lifeline khác. Mỗi sự chuyển tiếp trạng thái hoặc giá trị có thể có một sự kiện được định nghĩa, một thời điểm hạn chế để chỉ ra khi nào một sự kiện phải xuất hiện, và tong tại trong khoảng thời gian bao lâu. Hình 5. Biểu đồ kết hợp nhiều State lifeline và Value lifeline CHƯƠNG 3 PHÂN TÍCH THIẾT KẾ HỆ THỐNG Đặc tả yêu cầu hệ thống Mô tả tổng thể Hệ thống được xây dựng mới hoàn toàn. Trên thực tế mới có đặt vé máy bay, gọi tắc xi, thuê xe khách qua mạng. Các chức năng của hệ thống Chức năng quản trị: Tạo, xóa, sửa tài khoản đăng nhập hệ thống Chức năng quản lý Quản lý đặt vé: Đặt vé, hủy vé, sửa thông tin về vé cho khách hàng gọi điện đến, hủy vé đã quá hạn thanh toán. Quản lý lịch trình: Thêm, sửa thông tin , hủy chuyến xe. Quản lý điểm đến: Thêm mới, sửa thông tin, hủy điểm đến. Quản lý loại xe: Thêm mới, sửa thông tin, xóa loại xe đưa vào sử dụng. Quản lý xe khách: Thêm mới, sửa thông tin, xóa xe khách hoạt động Chức năng người sử dụng bình thường: Xem, tìm kiếm thông tin về lịch trình xe chạy, đặt vé, xóa, sửa thông tin đặt vé, thanh toan trực tuyến. Người sử dụng Khách: Có quyền tìm kiếm, xem thông tin v